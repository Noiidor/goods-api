BEGIN;

CREATE SCHEMA IF NOT EXISTS "public";

CREATE OR REPLACE FUNCTION next_priority() RETURNS INTEGER
AS
$$
BEGIN
    RETURN (SELECT (COALESCE(MAX(priority),0)+1) FROM goods);
END;
$$ LANGUAGE plpgsql;

CREATE TABLE IF NOT EXISTS "public"."projects"
(
    "id" integer generated by default as identity
        primary key,
    "name" text
        not null,
    "created_at" timestamp
        not null
        default current_timestamp
);

CREATE INDEX IF NOT EXISTS idx_public_projects_id ON projects(id);

COMMENT ON COLUMN public.projects.id IS $$ id записи $$;
COMMENT ON COLUMN public.projects.name IS $$ название $$;
COMMENT ON COLUMN public.projects.created_at IS $$ дата и время $$;

CREATE TABLE IF NOT EXISTS public.goods
(
    "id" integer generated by default as identity,
    "project_id" integer
        references public.projects(id),
    "name" text
        not null,
    "description" text
        not null
        default '',
    "priority" integer
        not null
        default next_priority(),
    "removed" boolean
        not null
        default false,
    "created_at" timestamp
        not null
        default current_timestamp,
    PRIMARY KEY (id, project_id)
);

CREATE UNIQUE INDEX IF NOT EXISTS idx_public_goods_id ON goods(id);
CREATE INDEX IF NOT EXISTS idx_public_goods_project_id ON goods(project_id);
CREATE INDEX IF NOT EXISTS idx_public_goods_name ON goods(name);

COMMENT ON COLUMN public.goods.id IS $$ id записи $$;
COMMENT ON COLUMN public.goods.project_id IS $$ id компании $$;
COMMENT ON COLUMN public.goods.name IS $$ название $$;
COMMENT ON COLUMN public.goods.description IS $$ описание $$;
COMMENT ON COLUMN public.goods.priority IS $$ приоритет $$;
COMMENT ON COLUMN public.goods.removed IS $$ статус удаления $$;
COMMENT ON COLUMN public.goods.created_at IS $$ дата и время $$;

INSERT INTO public.projects (name)
VALUES ('Первая запись');

COMMIT;